server.port=8082
spring.kafka.bootstrap-servers=${KAFKA_BOOSTRAP_SERVER:localhost:9092}
spring.json.type.mapping=com.example:com.example.alumnonotas.event.Event

#spring.kafka.properties.security.protocol=SASL_PLAINTEXT
#SASL_SSL
#spring.kafka.properties.sasl.mechanism=PLAIN
#SCRAM-SHA-512
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="consumer" password="consumer-secret";

spring.kafka.listener.concurrency=1
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:grupo1}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.producer.acks=1
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.data.mongodb.uri=mongodb://${host:localhost}:${port:27017}/${database:alumnos}
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

logging.level.root=INFO
logging.level.org.springframework.kafka=INFO